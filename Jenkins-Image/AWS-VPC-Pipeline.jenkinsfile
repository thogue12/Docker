pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION = 'us-west-1'
        THE_STUFF_LEGEND = credentials('terraform-user')
        GIT_CREDS = credentials('github-credentials')
        GITHUB_TOKEN = credentials('github-token') // The variable name here does not matter, because the value is associated with the ID of terraform-user
    }
    stages {
        stage('Install Terraform') {
            steps {
                script {
                    def terraformVersion = '1.9.3'
                    sh """
                    if ! command -v terraform &> /dev/null
                    then
                        curl -LO https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
                        unzip terraform_${terraformVersion}_linux_amd64.zip
                        mkdir -p /usr/local/bin/
          
                    fi
                    """
                }
            }
        }
        stage('Checkout') {
            steps {
                git url: 'https://github.com/thogue12/terraform-vpc-project.git', branch: 'main', credentialsId: 'github-token'
            }
        }
        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Plan') {
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }
        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -auto-approve tfplan'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}

